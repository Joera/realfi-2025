{"id":"5f19ce2e6125d179c94d06c255ad187c","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"contracts/survey-store.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract SurveyStore {\n    struct Survey {\n        string ipfsCid;\n        string didNil;\n        address owner;\n        uint256 createdAt;\n        bool exists;\n    }\n    \n    // Mapping: owner address => survey name => Survey data\n    mapping(address => mapping(string => Survey)) private surveys;\n    \n    // Events\n    event SurveyCreated(\n        address indexed owner,\n        string surveyName,\n        string ipfsCid,\n        string didNil,\n        uint256 timestamp\n    );\n    \n    /**\n     * @dev Create a new survey\n     * @param surveyName Name of the survey\n     * @param ipfsCid IPFS CID containing the survey questions JSON\n     * @param didNil DID:NIL representing read access over the survey data\n     */\n    function createSurvey(\n        string memory surveyName,\n        string memory ipfsCid,\n        string memory didNil\n    ) external {\n        require(bytes(surveyName).length > 0, \"Survey name cannot be empty\");\n        require(bytes(ipfsCid).length > 0, \"IPFS CID cannot be empty\");\n        require(bytes(didNil).length > 0, \"DID:NIL cannot be empty\");\n        require(!surveys[msg.sender][surveyName].exists, \"Survey already exists\");\n        \n        surveys[msg.sender][surveyName] = Survey({\n            ipfsCid: ipfsCid,\n            didNil: didNil,\n            owner: msg.sender,\n            createdAt: block.timestamp,\n            exists: true\n        });\n        \n        emit SurveyCreated(msg.sender, surveyName, ipfsCid, didNil, block.timestamp);\n    }\n    \n    /**\n     * @dev Get survey IPFS CID\n     * @param owner Address of the survey owner\n     * @param surveyName Name of the survey\n     * @return IPFS CID of the survey\n     */\n    function getSurveyCid(address owner, string memory surveyName) \n        external \n        view \n        returns (string memory) \n    {\n        require(surveys[owner][surveyName].exists, \"Survey does not exist\");\n        return surveys[owner][surveyName].ipfsCid;\n    }\n    \n    /**\n     * @dev Get survey DID:NIL\n     * @param owner Address of the survey owner\n     * @param surveyName Name of the survey\n     * @return DID:NIL of the survey\n     */\n    function getSurveyDidNil(address owner, string memory surveyName) \n        external \n        view \n        returns (string memory) \n    {\n        require(surveys[owner][surveyName].exists, \"Survey does not exist\");\n        return surveys[owner][surveyName].didNil;\n    }\n    \n    /**\n     * @dev Get complete survey data\n     * @param owner Address of the survey owner\n     * @param surveyName Name of the survey\n     * @return ipfsCid IPFS CID\n     * @return didNil DID:NIL\n     * @return surveyOwner Owner address\n     * @return createdAt Creation timestamp\n     */\n    function getSurvey(address owner, string memory surveyName) \n        external \n        view \n        returns (\n            string memory ipfsCid,\n            string memory didNil,\n            address surveyOwner,\n            uint256 createdAt\n        ) \n    {\n        require(surveys[owner][surveyName].exists, \"Survey does not exist\");\n        Survey memory survey = surveys[owner][surveyName];\n        return (survey.ipfsCid, survey.didNil, survey.owner, survey.createdAt);\n    }\n    \n    /**\n     * @dev Check if an address is the owner of a survey (for Lit Protocol)\n     * @param authSigAddress Address from the Lit Protocol auth signature\n     * @param surveyName Name of the survey to check\n     * @return bool True if the address owns the survey, false otherwise\n     */\n    function isOwner(address authSigAddress, string memory surveyName) \n        external \n        view \n        returns (bool) \n    {\n        return surveys[authSigAddress][surveyName].exists;\n    }\n    \n    /**\n     * @dev Check if a survey exists\n     * @param owner Address of the survey owner\n     * @param surveyName Name of the survey\n     * @return bool True if survey exists\n     */\n    function surveyExists(address owner, string memory surveyName) \n        external \n        view \n        returns (bool) \n    {\n        return surveys[owner][surveyName].exists;\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"contracts/survey-store.sol":{"ast":{"absolutePath":"contracts/survey-store.sol","exportedSymbols":{"SurveyStore":[253]},"id":254,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"SurveyStore","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":253,"linearizedBaseContracts":[253],"name":"SurveyStore","nameLocation":"66:11:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SurveyStore.Survey","id":12,"members":[{"constant":false,"id":3,"mutability":"mutable","name":"ipfsCid","nameLocation":"115:7:0","nodeType":"VariableDeclaration","scope":12,"src":"108:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2,"name":"string","nodeType":"ElementaryTypeName","src":"108:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"didNil","nameLocation":"139:6:0","nodeType":"VariableDeclaration","scope":12,"src":"132:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4,"name":"string","nodeType":"ElementaryTypeName","src":"132:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"owner","nameLocation":"163:5:0","nodeType":"VariableDeclaration","scope":12,"src":"155:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"createdAt","nameLocation":"186:9:0","nodeType":"VariableDeclaration","scope":12,"src":"178:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11,"mutability":"mutable","name":"exists","nameLocation":"210:6:0","nodeType":"VariableDeclaration","scope":12,"src":"205:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10,"name":"bool","nodeType":"ElementaryTypeName","src":"205:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Survey","nameLocation":"91:6:0","nodeType":"StructDefinition","scope":253,"src":"84:139:0","visibility":"public"},{"constant":false,"id":19,"mutability":"mutable","name":"surveys","nameLocation":"347:7:0","nodeType":"VariableDeclaration","scope":253,"src":"293:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string => struct SurveyStore.Survey))"},"typeName":{"id":18,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"301:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"293:45:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string => struct SurveyStore.Survey))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":14,"name":"string","nodeType":"ElementaryTypeName","src":"320:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"312:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string => struct SurveyStore.Survey)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"nodeType":"UserDefinedTypeName","pathNode":{"id":15,"name":"Survey","nameLocations":["330:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":12,"src":"330:6:0"},"referencedDeclaration":12,"src":"330:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage_ptr","typeString":"struct SurveyStore.Survey"}}}},"visibility":"private"},{"anonymous":false,"eventSelector":"38d60978c6e1c77056d64bb66cf4ab44f8aa26482cd8a63bbdf3c2dcbf6ff2c3","id":31,"name":"SurveyCreated","nameLocation":"385:13:0","nodeType":"EventDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"424:5:0","nodeType":"VariableDeclaration","scope":31,"src":"408:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20,"name":"address","nodeType":"ElementaryTypeName","src":"408:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23,"indexed":false,"mutability":"mutable","name":"surveyName","nameLocation":"446:10:0","nodeType":"VariableDeclaration","scope":31,"src":"439:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":22,"name":"string","nodeType":"ElementaryTypeName","src":"439:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":25,"indexed":false,"mutability":"mutable","name":"ipfsCid","nameLocation":"473:7:0","nodeType":"VariableDeclaration","scope":31,"src":"466:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"466:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":27,"indexed":false,"mutability":"mutable","name":"didNil","nameLocation":"497:6:0","nodeType":"VariableDeclaration","scope":31,"src":"490:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"490:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"521:9:0","nodeType":"VariableDeclaration","scope":31,"src":"513:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"398:138:0"},"src":"379:158:0"},{"body":{"id":113,"nodeType":"Block","src":"914:631:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":44,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"938:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":43,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"932:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":42,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:0","typeDescriptions":{}}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"950:6:0","memberName":"length","nodeType":"MemberAccess","src":"932:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"959:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"932:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537572766579206e616d652063616e6e6f7420626520656d707479","id":49,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"962:29:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa4600c91c574367c02174f205a52d94df36fda493a59be78f58713f6514cd0b","typeString":"literal_string \"Survey name cannot be empty\""},"value":"Survey name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa4600c91c574367c02174f205a52d94df36fda493a59be78f58713f6514cd0b","typeString":"literal_string \"Survey name cannot be empty\""}],"id":41,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"924:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"924:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":51,"nodeType":"ExpressionStatement","src":"924:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":55,"name":"ipfsCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1016:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1010:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":53,"name":"bytes","nodeType":"ElementaryTypeName","src":"1010:5:0","typeDescriptions":{}}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1010:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1025:6:0","memberName":"length","nodeType":"MemberAccess","src":"1010:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":58,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1034:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1010:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49504653204349442063616e6e6f7420626520656d707479","id":60,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1037:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a95c9ae129f59afc83b725506248fafbc231592d3c41526927b6fca1b836beac","typeString":"literal_string \"IPFS CID cannot be empty\""},"value":"IPFS CID cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a95c9ae129f59afc83b725506248fafbc231592d3c41526927b6fca1b836beac","typeString":"literal_string \"IPFS CID cannot be empty\""}],"id":52,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1002:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62,"nodeType":"ExpressionStatement","src":"1002:62:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":66,"name":"didNil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1088:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":65,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1082:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":64,"name":"bytes","nodeType":"ElementaryTypeName","src":"1082:5:0","typeDescriptions":{}}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1082:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1096:6:0","memberName":"length","nodeType":"MemberAccess","src":"1082:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1105:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1082:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4449443a4e494c2063616e6e6f7420626520656d707479","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1108:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3b212ec64851890cebf7c1f3f74be0d9ef5432821de6cb5427672b6920dbf16","typeString":"literal_string \"DID:NIL cannot be empty\""},"value":"DID:NIL cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3b212ec64851890cebf7c1f3f74be0d9ef5432821de6cb5427672b6920dbf16","typeString":"literal_string \"DID:NIL cannot be empty\""}],"id":63,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1074:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"ExpressionStatement","src":"1074:60:0"},{"expression":{"arguments":[{"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1152:39:0","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":75,"name":"surveys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1153:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string memory => struct SurveyStore.Survey storage ref))"}},"id":78,"indexExpression":{"expression":{"id":76,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1161:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1165:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1161:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1153:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string memory => struct SurveyStore.Survey storage ref)"}},"id":80,"indexExpression":{"id":79,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"1173:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1153:31:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"id":81,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1185:6:0","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":11,"src":"1153:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53757276657920616c726561647920657869737473","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1193:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fe453fa42728e6ff9d844a1d57cd4bba4fb6be04918856cc3655b116c86314a","typeString":"literal_string \"Survey already exists\""},"value":"Survey already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4fe453fa42728e6ff9d844a1d57cd4bba4fb6be04918856cc3655b116c86314a","typeString":"literal_string \"Survey already exists\""}],"id":74,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1144:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1144:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"1144:73:0"},{"expression":{"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":86,"name":"surveys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1236:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string memory => struct SurveyStore.Survey storage ref))"}},"id":90,"indexExpression":{"expression":{"id":87,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1244:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1248:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1244:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1236:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string memory => struct SurveyStore.Survey storage ref)"}},"id":91,"indexExpression":{"id":89,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"1256:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1236:31:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":93,"name":"ipfsCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1300:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":94,"name":"didNil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1329:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":95,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1356:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1360:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1356:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":97,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1391:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1397:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"1391:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1428:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":92,"name":"Survey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1270:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Survey_$12_storage_ptr_$","typeString":"type(struct SurveyStore.Survey storage pointer)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1291:7:0","1321:6:0","1349:5:0","1380:9:0","1420:6:0"],"names":["ipfsCid","didNil","owner","createdAt","exists"],"nodeType":"FunctionCall","src":"1270:173:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_memory_ptr","typeString":"struct SurveyStore.Survey memory"}},"src":"1236:207:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"id":102,"nodeType":"ExpressionStatement","src":"1236:207:0"},{"eventCall":{"arguments":[{"expression":{"id":104,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1481:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1485:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1481:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":106,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"1493:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":107,"name":"ipfsCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1505:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":108,"name":"didNil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1514:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":109,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1522:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1528:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"1522:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":103,"name":"SurveyCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1467:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,string memory,string memory,string memory,uint256)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1467:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"EmitStatement","src":"1462:76:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"547:230:0","text":" @dev Create a new survey\n @param surveyName Name of the survey\n @param ipfsCid IPFS CID containing the survey questions JSON\n @param didNil DID:NIL representing read access over the survey data"},"functionSelector":"afe2d16e","id":114,"implemented":true,"kind":"function","modifiers":[],"name":"createSurvey","nameLocation":"791:12:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"surveyName","nameLocation":"827:10:0","nodeType":"VariableDeclaration","scope":114,"src":"813:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33,"name":"string","nodeType":"ElementaryTypeName","src":"813:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"ipfsCid","nameLocation":"861:7:0","nodeType":"VariableDeclaration","scope":114,"src":"847:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":35,"name":"string","nodeType":"ElementaryTypeName","src":"847:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"didNil","nameLocation":"892:6:0","nodeType":"VariableDeclaration","scope":114,"src":"878:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":37,"name":"string","nodeType":"ElementaryTypeName","src":"878:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"803:101:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[],"src":"914:0:0"},"scope":253,"src":"782:763:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":141,"nodeType":"Block","src":"1866:135:0","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"baseExpression":{"id":125,"name":"surveys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1884:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string memory => struct SurveyStore.Survey storage ref))"}},"id":127,"indexExpression":{"id":126,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1892:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1884:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string memory => struct SurveyStore.Survey storage ref)"}},"id":129,"indexExpression":{"id":128,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1899:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1884:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"id":130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1911:6:0","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":11,"src":"1884:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53757276657920646f6573206e6f74206578697374","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1919:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_39cce87e468f69d26b400a3554f182e28169abc7c8010d49e4ac59dc6298571d","typeString":"literal_string \"Survey does not exist\""},"value":"Survey does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39cce87e468f69d26b400a3554f182e28169abc7c8010d49e4ac59dc6298571d","typeString":"literal_string \"Survey does not exist\""}],"id":124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1876:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1876:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":133,"nodeType":"ExpressionStatement","src":"1876:67:0"},{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":134,"name":"surveys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1960:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string memory => struct SurveyStore.Survey storage ref))"}},"id":136,"indexExpression":{"id":135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1968:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1960:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string memory => struct SurveyStore.Survey storage ref)"}},"id":138,"indexExpression":{"id":137,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1975:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1960:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"id":139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1987:7:0","memberName":"ipfsCid","nodeType":"MemberAccess","referencedDeclaration":3,"src":"1960:34:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":123,"id":140,"nodeType":"Return","src":"1953:41:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"1555:173:0","text":" @dev Get survey IPFS CID\n @param owner Address of the survey owner\n @param surveyName Name of the survey\n @return IPFS CID of the survey"},"functionSelector":"4a8e7564","id":142,"implemented":true,"kind":"function","modifiers":[],"name":"getSurveyCid","nameLocation":"1742:12:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"owner","nameLocation":"1763:5:0","nodeType":"VariableDeclaration","scope":142,"src":"1755:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"surveyName","nameLocation":"1784:10:0","nodeType":"VariableDeclaration","scope":142,"src":"1770:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":118,"name":"string","nodeType":"ElementaryTypeName","src":"1770:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1754:41:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":142,"src":"1846:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":121,"name":"string","nodeType":"ElementaryTypeName","src":"1846:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1845:15:0"},"scope":253,"src":"1733:268:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":169,"nodeType":"Block","src":"2323:134:0","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"baseExpression":{"id":153,"name":"surveys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"2341:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string memory => struct SurveyStore.Survey storage ref))"}},"id":155,"indexExpression":{"id":154,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2349:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2341:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string memory => struct SurveyStore.Survey storage ref)"}},"id":157,"indexExpression":{"id":156,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2356:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2341:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"id":158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2368:6:0","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":11,"src":"2341:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53757276657920646f6573206e6f74206578697374","id":159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2376:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_39cce87e468f69d26b400a3554f182e28169abc7c8010d49e4ac59dc6298571d","typeString":"literal_string \"Survey does not exist\""},"value":"Survey does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39cce87e468f69d26b400a3554f182e28169abc7c8010d49e4ac59dc6298571d","typeString":"literal_string \"Survey does not exist\""}],"id":152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2333:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2333:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":161,"nodeType":"ExpressionStatement","src":"2333:67:0"},{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":162,"name":"surveys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"2417:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string memory => struct SurveyStore.Survey storage ref))"}},"id":164,"indexExpression":{"id":163,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2425:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2417:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string memory => struct SurveyStore.Survey storage ref)"}},"id":166,"indexExpression":{"id":165,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2432:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2417:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"id":167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2444:6:0","memberName":"didNil","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2417:33:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":151,"id":168,"nodeType":"Return","src":"2410:40:0"}]},"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"2011:171:0","text":" @dev Get survey DID:NIL\n @param owner Address of the survey owner\n @param surveyName Name of the survey\n @return DID:NIL of the survey"},"functionSelector":"c307ccf0","id":170,"implemented":true,"kind":"function","modifiers":[],"name":"getSurveyDidNil","nameLocation":"2196:15:0","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"owner","nameLocation":"2220:5:0","nodeType":"VariableDeclaration","scope":170,"src":"2212:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"surveyName","nameLocation":"2241:10:0","nodeType":"VariableDeclaration","scope":170,"src":"2227:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":146,"name":"string","nodeType":"ElementaryTypeName","src":"2227:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:41:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"2303:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":149,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:0"},"scope":253,"src":"2187:270:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":215,"nodeType":"Block","src":"3017:223:0","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"baseExpression":{"id":187,"name":"surveys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"3035:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string memory => struct SurveyStore.Survey storage ref))"}},"id":189,"indexExpression":{"id":188,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"3043:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3035:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string memory => struct SurveyStore.Survey storage ref)"}},"id":191,"indexExpression":{"id":190,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"3050:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3035:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"id":192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3062:6:0","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":11,"src":"3035:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53757276657920646f6573206e6f74206578697374","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3070:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_39cce87e468f69d26b400a3554f182e28169abc7c8010d49e4ac59dc6298571d","typeString":"literal_string \"Survey does not exist\""},"value":"Survey does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39cce87e468f69d26b400a3554f182e28169abc7c8010d49e4ac59dc6298571d","typeString":"literal_string \"Survey does not exist\""}],"id":186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3027:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3027:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"3027:67:0"},{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"survey","nameLocation":"3118:6:0","nodeType":"VariableDeclaration","scope":215,"src":"3104:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_memory_ptr","typeString":"struct SurveyStore.Survey"},"typeName":{"id":197,"nodeType":"UserDefinedTypeName","pathNode":{"id":196,"name":"Survey","nameLocations":["3104:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":12,"src":"3104:6:0"},"referencedDeclaration":12,"src":"3104:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage_ptr","typeString":"struct SurveyStore.Survey"}},"visibility":"internal"}],"id":204,"initialValue":{"baseExpression":{"baseExpression":{"id":199,"name":"surveys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"3127:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string memory => struct SurveyStore.Survey storage ref))"}},"id":201,"indexExpression":{"id":200,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"3135:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3127:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string memory => struct SurveyStore.Survey storage ref)"}},"id":203,"indexExpression":{"id":202,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"3142:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3127:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3104:49:0"},{"expression":{"components":[{"expression":{"id":205,"name":"survey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"3171:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_memory_ptr","typeString":"struct SurveyStore.Survey memory"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3178:7:0","memberName":"ipfsCid","nodeType":"MemberAccess","referencedDeclaration":3,"src":"3171:14:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":207,"name":"survey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"3187:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_memory_ptr","typeString":"struct SurveyStore.Survey memory"}},"id":208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3194:6:0","memberName":"didNil","nodeType":"MemberAccess","referencedDeclaration":5,"src":"3187:13:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":209,"name":"survey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"3202:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_memory_ptr","typeString":"struct SurveyStore.Survey memory"}},"id":210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3209:5:0","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":7,"src":"3202:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":211,"name":"survey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"3216:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_memory_ptr","typeString":"struct SurveyStore.Survey memory"}},"id":212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3223:9:0","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":9,"src":"3216:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3170:63:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$","typeString":"tuple(string memory,string memory,address,uint256)"}},"functionReturnParameters":185,"id":214,"nodeType":"Return","src":"3163:70:0"}]},"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"2467:287:0","text":" @dev Get complete survey data\n @param owner Address of the survey owner\n @param surveyName Name of the survey\n @return ipfsCid IPFS CID\n @return didNil DID:NIL\n @return surveyOwner Owner address\n @return createdAt Creation timestamp"},"functionSelector":"c7ee0cb3","id":216,"implemented":true,"kind":"function","modifiers":[],"name":"getSurvey","nameLocation":"2768:9:0","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"owner","nameLocation":"2786:5:0","nodeType":"VariableDeclaration","scope":216,"src":"2778:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"2778:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"surveyName","nameLocation":"2807:10:0","nodeType":"VariableDeclaration","scope":216,"src":"2793:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":174,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2777:41:0"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"ipfsCid","nameLocation":"2896:7:0","nodeType":"VariableDeclaration","scope":216,"src":"2882:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":177,"name":"string","nodeType":"ElementaryTypeName","src":"2882:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"didNil","nameLocation":"2931:6:0","nodeType":"VariableDeclaration","scope":216,"src":"2917:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":179,"name":"string","nodeType":"ElementaryTypeName","src":"2917:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"surveyOwner","nameLocation":"2959:11:0","nodeType":"VariableDeclaration","scope":216,"src":"2951:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2951:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"createdAt","nameLocation":"2992:9:0","nodeType":"VariableDeclaration","scope":216,"src":"2984:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2984:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2868:143:0"},"scope":253,"src":"2759:481:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":233,"nodeType":"Block","src":"3670:66:0","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":226,"name":"surveys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"3687:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string memory => struct SurveyStore.Survey storage ref))"}},"id":228,"indexExpression":{"id":227,"name":"authSigAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3695:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3687:23:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string memory => struct SurveyStore.Survey storage ref)"}},"id":230,"indexExpression":{"id":229,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"3711:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3687:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3723:6:0","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":11,"src":"3687:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":225,"id":232,"nodeType":"Return","src":"3680:49:0"}]},"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3250:287:0","text":" @dev Check if an address is the owner of a survey (for Lit Protocol)\n @param authSigAddress Address from the Lit Protocol auth signature\n @param surveyName Name of the survey to check\n @return bool True if the address owns the survey, false otherwise"},"functionSelector":"cd379964","id":234,"implemented":true,"kind":"function","modifiers":[],"name":"isOwner","nameLocation":"3551:7:0","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"authSigAddress","nameLocation":"3567:14:0","nodeType":"VariableDeclaration","scope":234,"src":"3559:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"3559:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"surveyName","nameLocation":"3597:10:0","nodeType":"VariableDeclaration","scope":234,"src":"3583:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":220,"name":"string","nodeType":"ElementaryTypeName","src":"3583:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3558:50:0"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":234,"src":"3659:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":223,"name":"bool","nodeType":"ElementaryTypeName","src":"3659:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3658:6:0"},"scope":253,"src":"3542:194:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":251,"nodeType":"Block","src":"4057:57:0","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":244,"name":"surveys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"4074:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$_$","typeString":"mapping(address => mapping(string memory => struct SurveyStore.Survey storage ref))"}},"id":246,"indexExpression":{"id":245,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"4082:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4074:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Survey_$12_storage_$","typeString":"mapping(string memory => struct SurveyStore.Survey storage ref)"}},"id":248,"indexExpression":{"id":247,"name":"surveyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4089:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4074:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_Survey_$12_storage","typeString":"struct SurveyStore.Survey storage ref"}},"id":249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4101:6:0","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":11,"src":"4074:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":243,"id":250,"nodeType":"Return","src":"4067:40:0"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3746:182:0","text":" @dev Check if a survey exists\n @param owner Address of the survey owner\n @param surveyName Name of the survey\n @return bool True if survey exists"},"functionSelector":"0da6428c","id":252,"implemented":true,"kind":"function","modifiers":[],"name":"surveyExists","nameLocation":"3942:12:0","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"owner","nameLocation":"3963:5:0","nodeType":"VariableDeclaration","scope":252,"src":"3955:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3955:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"surveyName","nameLocation":"3984:10:0","nodeType":"VariableDeclaration","scope":252,"src":"3970:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":238,"name":"string","nodeType":"ElementaryTypeName","src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3954:41:0"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":252,"src":"4046:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":241,"name":"bool","nodeType":"ElementaryTypeName","src":"4046:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4045:6:0"},"scope":253,"src":"3933:181:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":254,"src":"57:4059:0","usedErrors":[],"usedEvents":[31]}],"src":"32:4084:0"},"id":0}},"contracts":{"contracts/survey-store.sol":{"SurveyStore":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"string","name":"surveyName","type":"string"},{"indexed":false,"internalType":"string","name":"ipfsCid","type":"string"},{"indexed":false,"internalType":"string","name":"didNil","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SurveyCreated","type":"event"},{"inputs":[{"internalType":"string","name":"surveyName","type":"string"},{"internalType":"string","name":"ipfsCid","type":"string"},{"internalType":"string","name":"didNil","type":"string"}],"name":"createSurvey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"surveyName","type":"string"}],"name":"getSurvey","outputs":[{"internalType":"string","name":"ipfsCid","type":"string"},{"internalType":"string","name":"didNil","type":"string"},{"internalType":"address","name":"surveyOwner","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"surveyName","type":"string"}],"name":"getSurveyCid","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"surveyName","type":"string"}],"name":"getSurveyDidNil","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"authSigAddress","type":"address"},{"internalType":"string","name":"surveyName","type":"string"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"surveyName","type":"string"}],"name":"surveyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461001657610a70908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630da6428c1461005e5780634a8e756414610743578063afe2d16e146101ef578063c307ccf014610176578063c7ee0cb3146100635763cd3799641461005e57600080fd5b610879565b346101715761015561007436610836565b6100e260018060a01b0380931691826000526020928391600083526040600020916100c460ff60046040518781875198828901996100b381848d6108cf565b820190815203019020015416610917565b600052600083526040600020906040519485938492519283916108cf565b820190815203019020610162604051926100fb846107a1565b61010483610995565b845261011260018401610995565b9485828601526002840154169384604082015260ff60046003860154958660608501520154161515608082015251946040519687966080885260808801906108f2565b91868303908701526108f2565b91604084015260608301520390f35b600080fd5b34610171576101c76101d6600161018c36610836565b9390828060a01b031693846000526020948591600083526040600020916100c460ff60046040518781875198828901996100b381848d6108cf565b82019081520301902001610995565b906101eb6040519282849384528301906108f2565b0390f35b346101715760603660031901126101715760043567ffffffffffffffff8111610171576102209036906004016107df565b60243567ffffffffffffffff8111610171576102409036906004016107df565b60443567ffffffffffffffff8111610171576102609036906004016107df565b908251156106fe578051156106b95781511561067457336000526000602052604060002060ff6004604051602081885195828a01966102a081848a6108cf565b820190815203019020015416610637576102fb6020604051926102c2846107a1565b84845285828501523360408501524260608501526001608085015233600052600082526040600020604051809481938a519283916108cf565b820190815203019020815180519067ffffffffffffffff821161055a578190610324845461095b565b601f81116105e7575b50602090601f831160011461057b57600092610570575b50508160011b916000199060031b1c19161781555b602082015180519067ffffffffffffffff821161055a5761037d600184015461095b565b601f8111610513575b50602090601f831160011461047657600461044e948461045c98957f38d60978c6e1c77056d64bb66cf4ab44f8aa26482cd8a63bbdf3c2dcbf6ff2c39a989560809560009261046b575b50508160011b916000199060031b1c19161760018201555b6002810160018060a01b036040860151166bffffffffffffffffffffffff60a01b8254161790556060840151600382015501910151151560ff80198354169116179055610440604051966080885260808801906108f2565b9086820360208801526108f2565b9084820360408601526108f2565b914260608201528033930390a2005b015190508c806103d0565b90601f198316916001850160005260206000209260005b8181106104fb5750946001857f38d60978c6e1c77056d64bb66cf4ab44f8aa26482cd8a63bbdf3c2dcbf6ff2c39a989560809560049561045c9c9961044e9b106104e2575b505050811b0160018201556103e8565b015160001960f88460031b161c191690558c80806104d2565b9293602060018192878601518155019501930161048d565b600184016000526020600020601f840160051c810160208510610553575b601f830160051c82018110610547575050610386565b60008155600101610531565b5080610531565b634e487b7160e01b600052604160045260246000fd5b015190508780610344565b9250836000526020600020906000935b601f19841685106105cc576001945083601f198116106105b3575b505050811b018155610359565b015160001960f88460031b161c191690558780806105a6565b8181015183556020948501946001909301929091019061058b565b909150836000526020600020601f840160051c810160208510610630575b90849392915b601f830160051c8201811061062157505061032d565b6000815585945060010161060b565b5080610605565b60405162461bcd60e51b815260206004820152601560248201527453757276657920616c72656164792065786973747360581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f4449443a4e494c2063616e6e6f7420626520656d7074790000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f49504653204349442063616e6e6f7420626520656d70747900000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f537572766579206e616d652063616e6e6f7420626520656d70747900000000006044820152606490fd5b34610171576107936101d661075736610836565b929060018060a01b031692836000526020938491600083526040600020916100c460ff60046040518781875198828901996100b381848d6108cf565b820190815203019020610995565b60a0810190811067ffffffffffffffff82111761055a57604052565b90601f8019910116810190811067ffffffffffffffff82111761055a57604052565b81601f820112156101715780359067ffffffffffffffff821161055a5760405192610814601f8401601f1916602001856107bd565b8284526020838301011161017157816000926020809301838601378301015290565b906040600319830112610171576004356001600160a01b038116810361017157916024359067ffffffffffffffff821161017157610876916004016107df565b90565b3461017157602060ff60046108b98361089136610836565b9060018060a01b031660005260008252604060002082604051948386809551938492016108cf565b8201908152030190200154166040519015158152f35b60005b8381106108e25750506000910152565b81810151838201526020016108d2565b9060209161090b815180928185528580860191016108cf565b601f01601f1916010190565b1561091e57565b60405162461bcd60e51b815260206004820152601560248201527414dd5c9d995e48191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b90600182811c9216801561098b575b602083101461097557565b634e487b7160e01b600052602260045260246000fd5b91607f169161096a565b906040519182600082546109a88161095b565b90818452602094600191600181169081600014610a1857506001146109d9575b5050506109d7925003836107bd565b565b600090815285812095935091905b818310610a005750506109d793508201013880806109c8565b855488840185015294850194879450918301916109e7565b925050506109d794925060ff191682840152151560051b8201013880806109c856fea26469706673582212202203bc684f479cf9a8ef94c6bd97372bdd474606312688ee04caa195f003e25464736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0xA70 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA6428C EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x4A8E7564 EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xAFE2D16E EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC307CCF0 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xC7EE0CB3 EQ PUSH2 0x63 JUMPI PUSH4 0xCD379964 EQ PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x879 JUMP JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH2 0x155 PUSH2 0x74 CALLDATASIZE PUSH2 0x836 JUMP JUMPDEST PUSH2 0xE2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xC4 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD DUP8 DUP2 DUP8 MLOAD SWAP9 DUP3 DUP10 ADD SWAP10 PUSH2 0xB3 DUP2 DUP5 DUP14 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH2 0x917 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x162 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xFB DUP5 PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x104 DUP4 PUSH2 0x995 JUMP JUMPDEST DUP5 MSTORE PUSH2 0x112 PUSH1 0x1 DUP5 ADD PUSH2 0x995 JUMP JUMPDEST SWAP5 DUP6 DUP3 DUP7 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD AND SWAP4 DUP5 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP7 ADD SLOAD SWAP6 DUP7 PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE MLOAD SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0x80 DUP9 MSTORE PUSH1 0x80 DUP9 ADD SWAP1 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB SWAP1 DUP8 ADD MSTORE PUSH2 0x8F2 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH2 0x1C7 PUSH2 0x1D6 PUSH1 0x1 PUSH2 0x18C CALLDATASIZE PUSH2 0x836 JUMP JUMPDEST SWAP4 SWAP1 DUP3 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP5 DUP6 SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xC4 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD DUP8 DUP2 DUP8 MLOAD SWAP9 DUP3 DUP10 ADD SWAP10 PUSH2 0xB3 DUP2 DUP5 DUP14 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD PUSH2 0x995 JUMP JUMPDEST SWAP1 PUSH2 0x1EB PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x8F2 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x171 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x171 JUMPI PUSH2 0x220 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x171 JUMPI PUSH2 0x240 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x171 JUMPI PUSH2 0x260 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7DF JUMP JUMPDEST SWAP1 DUP3 MLOAD ISZERO PUSH2 0x6FE JUMPI DUP1 MLOAD ISZERO PUSH2 0x6B9 JUMPI DUP2 MLOAD ISZERO PUSH2 0x674 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP9 MLOAD SWAP6 DUP3 DUP11 ADD SWAP7 PUSH2 0x2A0 DUP2 DUP5 DUP11 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH2 0x637 JUMPI PUSH2 0x2FB PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2C2 DUP5 PUSH2 0x7A1 JUMP JUMPDEST DUP5 DUP5 MSTORE DUP6 DUP3 DUP6 ADD MSTORE CALLER PUSH1 0x40 DUP6 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP6 ADD MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x55A JUMPI DUP2 SWAP1 PUSH2 0x324 DUP5 SLOAD PUSH2 0x95B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x5E7 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x57B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x570 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x55A JUMPI PUSH2 0x37D PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x95B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x513 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x476 JUMPI PUSH1 0x4 PUSH2 0x44E SWAP5 DUP5 PUSH2 0x45C SWAP9 SWAP6 PUSH32 0x38D60978C6E1C77056D64BB66CF4AB44F8AA26482CD8A63BBDF3C2DCBF6FF2C3 SWAP11 SWAP9 SWAP6 PUSH1 0x80 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x46B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x2 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP7 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x440 PUSH1 0x40 MLOAD SWAP7 PUSH1 0x80 DUP9 MSTORE PUSH1 0x80 DUP9 ADD SWAP1 PUSH2 0x8F2 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x8F2 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x8F2 JUMP JUMPDEST SWAP2 TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE DUP1 CALLER SWAP4 SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0x3D0 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4FB JUMPI POP SWAP5 PUSH1 0x1 DUP6 PUSH32 0x38D60978C6E1C77056D64BB66CF4AB44F8AA26482CD8A63BBDF3C2DCBF6FF2C3 SWAP11 SWAP9 SWAP6 PUSH1 0x80 SWAP6 PUSH1 0x4 SWAP6 PUSH2 0x45C SWAP13 SWAP10 PUSH2 0x44E SWAP12 LT PUSH2 0x4E2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x3E8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x4D2 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x553 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x547 JUMPI POP POP PUSH2 0x386 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x531 JUMP JUMPDEST POP DUP1 PUSH2 0x531 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x344 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x5CC JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x5B3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x359 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x5A6 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x58B JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x630 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x621 JUMPI POP POP PUSH2 0x32D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x60B JUMP JUMPDEST POP DUP1 PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x53757276657920616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4449443A4E494C2063616E6E6F7420626520656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49504653204349442063616E6E6F7420626520656D7074790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537572766579206E616D652063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH2 0x793 PUSH2 0x1D6 PUSH2 0x757 CALLDATASIZE PUSH2 0x836 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xC4 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD DUP8 DUP2 DUP8 MLOAD SWAP9 DUP3 DUP10 ADD SWAP10 PUSH2 0xB3 DUP2 DUP5 DUP14 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x995 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x55A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x55A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x171 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x814 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x7BD JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x171 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x171 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x171 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x171 JUMPI PUSH2 0x876 SWAP2 PUSH1 0x4 ADD PUSH2 0x7DF JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 PUSH2 0x8B9 DUP4 PUSH2 0x891 CALLDATASIZE PUSH2 0x836 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x40 MLOAD SWAP5 DUP4 DUP7 DUP1 SWAP6 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x8E2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8D2 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x90B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x91E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD5C9D995E48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x98B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x975 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x96A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x9A8 DUP2 PUSH2 0x95B JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xA18 JUMPI POP PUSH1 0x1 EQ PUSH2 0x9D9 JUMPI JUMPDEST POP POP POP PUSH2 0x9D7 SWAP3 POP SUB DUP4 PUSH2 0x7BD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0xA00 JUMPI POP POP PUSH2 0x9D7 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x9C8 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x9E7 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x9D7 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x9C8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SUB 0xBC PUSH9 0x4F479CF9A8EF94C6BD SWAP8 CALLDATACOPY 0x2B 0xDD SELFBALANCE CHAINID MOD BALANCE 0x26 DUP9 0xEE DIV 0xCA LOG1 SWAP6 CREATE SUB 0xE2 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"57:4059:0:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_addresst_string":{"entryPoint":2102,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_string":{"entryPoint":2015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":2290,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":2453,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2255,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_surveyExists":{"entryPoint":2169,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2395,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1981,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_8330":{"entryPoint":1953,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_39cc":{"entryPoint":2327,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c80630da6428c1461005e5780634a8e756414610743578063afe2d16e146101ef578063c307ccf014610176578063c7ee0cb3146100635763cd3799641461005e57600080fd5b610879565b346101715761015561007436610836565b6100e260018060a01b0380931691826000526020928391600083526040600020916100c460ff60046040518781875198828901996100b381848d6108cf565b820190815203019020015416610917565b600052600083526040600020906040519485938492519283916108cf565b820190815203019020610162604051926100fb846107a1565b61010483610995565b845261011260018401610995565b9485828601526002840154169384604082015260ff60046003860154958660608501520154161515608082015251946040519687966080885260808801906108f2565b91868303908701526108f2565b91604084015260608301520390f35b600080fd5b34610171576101c76101d6600161018c36610836565b9390828060a01b031693846000526020948591600083526040600020916100c460ff60046040518781875198828901996100b381848d6108cf565b82019081520301902001610995565b906101eb6040519282849384528301906108f2565b0390f35b346101715760603660031901126101715760043567ffffffffffffffff8111610171576102209036906004016107df565b60243567ffffffffffffffff8111610171576102409036906004016107df565b60443567ffffffffffffffff8111610171576102609036906004016107df565b908251156106fe578051156106b95781511561067457336000526000602052604060002060ff6004604051602081885195828a01966102a081848a6108cf565b820190815203019020015416610637576102fb6020604051926102c2846107a1565b84845285828501523360408501524260608501526001608085015233600052600082526040600020604051809481938a519283916108cf565b820190815203019020815180519067ffffffffffffffff821161055a578190610324845461095b565b601f81116105e7575b50602090601f831160011461057b57600092610570575b50508160011b916000199060031b1c19161781555b602082015180519067ffffffffffffffff821161055a5761037d600184015461095b565b601f8111610513575b50602090601f831160011461047657600461044e948461045c98957f38d60978c6e1c77056d64bb66cf4ab44f8aa26482cd8a63bbdf3c2dcbf6ff2c39a989560809560009261046b575b50508160011b916000199060031b1c19161760018201555b6002810160018060a01b036040860151166bffffffffffffffffffffffff60a01b8254161790556060840151600382015501910151151560ff80198354169116179055610440604051966080885260808801906108f2565b9086820360208801526108f2565b9084820360408601526108f2565b914260608201528033930390a2005b015190508c806103d0565b90601f198316916001850160005260206000209260005b8181106104fb5750946001857f38d60978c6e1c77056d64bb66cf4ab44f8aa26482cd8a63bbdf3c2dcbf6ff2c39a989560809560049561045c9c9961044e9b106104e2575b505050811b0160018201556103e8565b015160001960f88460031b161c191690558c80806104d2565b9293602060018192878601518155019501930161048d565b600184016000526020600020601f840160051c810160208510610553575b601f830160051c82018110610547575050610386565b60008155600101610531565b5080610531565b634e487b7160e01b600052604160045260246000fd5b015190508780610344565b9250836000526020600020906000935b601f19841685106105cc576001945083601f198116106105b3575b505050811b018155610359565b015160001960f88460031b161c191690558780806105a6565b8181015183556020948501946001909301929091019061058b565b909150836000526020600020601f840160051c810160208510610630575b90849392915b601f830160051c8201811061062157505061032d565b6000815585945060010161060b565b5080610605565b60405162461bcd60e51b815260206004820152601560248201527453757276657920616c72656164792065786973747360581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f4449443a4e494c2063616e6e6f7420626520656d7074790000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f49504653204349442063616e6e6f7420626520656d70747900000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f537572766579206e616d652063616e6e6f7420626520656d70747900000000006044820152606490fd5b34610171576107936101d661075736610836565b929060018060a01b031692836000526020938491600083526040600020916100c460ff60046040518781875198828901996100b381848d6108cf565b820190815203019020610995565b60a0810190811067ffffffffffffffff82111761055a57604052565b90601f8019910116810190811067ffffffffffffffff82111761055a57604052565b81601f820112156101715780359067ffffffffffffffff821161055a5760405192610814601f8401601f1916602001856107bd565b8284526020838301011161017157816000926020809301838601378301015290565b906040600319830112610171576004356001600160a01b038116810361017157916024359067ffffffffffffffff821161017157610876916004016107df565b90565b3461017157602060ff60046108b98361089136610836565b9060018060a01b031660005260008252604060002082604051948386809551938492016108cf565b8201908152030190200154166040519015158152f35b60005b8381106108e25750506000910152565b81810151838201526020016108d2565b9060209161090b815180928185528580860191016108cf565b601f01601f1916010190565b1561091e57565b60405162461bcd60e51b815260206004820152601560248201527414dd5c9d995e48191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b90600182811c9216801561098b575b602083101461097557565b634e487b7160e01b600052602260045260246000fd5b91607f169161096a565b906040519182600082546109a88161095b565b90818452602094600191600181169081600014610a1857506001146109d9575b5050506109d7925003836107bd565b565b600090815285812095935091905b818310610a005750506109d793508201013880806109c8565b855488840185015294850194879450918301916109e7565b925050506109d794925060ff191682840152151560051b8201013880806109c856fea26469706673582212202203bc684f479cf9a8ef94c6bd97372bdd474606312688ee04caa195f003e25464736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA6428C EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x4A8E7564 EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xAFE2D16E EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC307CCF0 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xC7EE0CB3 EQ PUSH2 0x63 JUMPI PUSH4 0xCD379964 EQ PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x879 JUMP JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH2 0x155 PUSH2 0x74 CALLDATASIZE PUSH2 0x836 JUMP JUMPDEST PUSH2 0xE2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xC4 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD DUP8 DUP2 DUP8 MLOAD SWAP9 DUP3 DUP10 ADD SWAP10 PUSH2 0xB3 DUP2 DUP5 DUP14 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH2 0x917 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x162 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xFB DUP5 PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x104 DUP4 PUSH2 0x995 JUMP JUMPDEST DUP5 MSTORE PUSH2 0x112 PUSH1 0x1 DUP5 ADD PUSH2 0x995 JUMP JUMPDEST SWAP5 DUP6 DUP3 DUP7 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD AND SWAP4 DUP5 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP7 ADD SLOAD SWAP6 DUP7 PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE MLOAD SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0x80 DUP9 MSTORE PUSH1 0x80 DUP9 ADD SWAP1 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB SWAP1 DUP8 ADD MSTORE PUSH2 0x8F2 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH2 0x1C7 PUSH2 0x1D6 PUSH1 0x1 PUSH2 0x18C CALLDATASIZE PUSH2 0x836 JUMP JUMPDEST SWAP4 SWAP1 DUP3 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP5 DUP6 SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xC4 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD DUP8 DUP2 DUP8 MLOAD SWAP9 DUP3 DUP10 ADD SWAP10 PUSH2 0xB3 DUP2 DUP5 DUP14 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD PUSH2 0x995 JUMP JUMPDEST SWAP1 PUSH2 0x1EB PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x8F2 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x171 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x171 JUMPI PUSH2 0x220 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x171 JUMPI PUSH2 0x240 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x171 JUMPI PUSH2 0x260 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7DF JUMP JUMPDEST SWAP1 DUP3 MLOAD ISZERO PUSH2 0x6FE JUMPI DUP1 MLOAD ISZERO PUSH2 0x6B9 JUMPI DUP2 MLOAD ISZERO PUSH2 0x674 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP9 MLOAD SWAP6 DUP3 DUP11 ADD SWAP7 PUSH2 0x2A0 DUP2 DUP5 DUP11 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH2 0x637 JUMPI PUSH2 0x2FB PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2C2 DUP5 PUSH2 0x7A1 JUMP JUMPDEST DUP5 DUP5 MSTORE DUP6 DUP3 DUP6 ADD MSTORE CALLER PUSH1 0x40 DUP6 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP6 ADD MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x55A JUMPI DUP2 SWAP1 PUSH2 0x324 DUP5 SLOAD PUSH2 0x95B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x5E7 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x57B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x570 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x55A JUMPI PUSH2 0x37D PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x95B JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x513 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x476 JUMPI PUSH1 0x4 PUSH2 0x44E SWAP5 DUP5 PUSH2 0x45C SWAP9 SWAP6 PUSH32 0x38D60978C6E1C77056D64BB66CF4AB44F8AA26482CD8A63BBDF3C2DCBF6FF2C3 SWAP11 SWAP9 SWAP6 PUSH1 0x80 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x46B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x2 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP7 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x440 PUSH1 0x40 MLOAD SWAP7 PUSH1 0x80 DUP9 MSTORE PUSH1 0x80 DUP9 ADD SWAP1 PUSH2 0x8F2 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x8F2 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x8F2 JUMP JUMPDEST SWAP2 TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE DUP1 CALLER SWAP4 SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0x3D0 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4FB JUMPI POP SWAP5 PUSH1 0x1 DUP6 PUSH32 0x38D60978C6E1C77056D64BB66CF4AB44F8AA26482CD8A63BBDF3C2DCBF6FF2C3 SWAP11 SWAP9 SWAP6 PUSH1 0x80 SWAP6 PUSH1 0x4 SWAP6 PUSH2 0x45C SWAP13 SWAP10 PUSH2 0x44E SWAP12 LT PUSH2 0x4E2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x3E8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x4D2 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x553 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x547 JUMPI POP POP PUSH2 0x386 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x531 JUMP JUMPDEST POP DUP1 PUSH2 0x531 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x344 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x5CC JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x5B3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x359 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x5A6 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x58B JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x630 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x621 JUMPI POP POP PUSH2 0x32D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x60B JUMP JUMPDEST POP DUP1 PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x53757276657920616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4449443A4E494C2063616E6E6F7420626520656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49504653204349442063616E6E6F7420626520656D7074790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537572766579206E616D652063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH2 0x793 PUSH2 0x1D6 PUSH2 0x757 CALLDATASIZE PUSH2 0x836 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xC4 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD DUP8 DUP2 DUP8 MLOAD SWAP9 DUP3 DUP10 ADD SWAP10 PUSH2 0xB3 DUP2 DUP5 DUP14 PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x995 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x55A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x55A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x171 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x814 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x7BD JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x171 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x171 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x171 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x171 JUMPI PUSH2 0x876 SWAP2 PUSH1 0x4 ADD PUSH2 0x7DF JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x171 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 PUSH2 0x8B9 DUP4 PUSH2 0x891 CALLDATASIZE PUSH2 0x836 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x40 MLOAD SWAP5 DUP4 DUP7 DUP1 SWAP6 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x8CF JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x8E2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8D2 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x90B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x91E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD5C9D995E48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x98B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x975 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x96A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x9A8 DUP2 PUSH2 0x95B JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xA18 JUMPI POP PUSH1 0x1 EQ PUSH2 0x9D9 JUMPI JUMPDEST POP POP POP PUSH2 0x9D7 SWAP3 POP SUB DUP4 PUSH2 0x7BD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0xA00 JUMPI POP POP PUSH2 0x9D7 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x9C8 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x9E7 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x9D7 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x9C8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SUB 0xBC PUSH9 0x4F479CF9A8EF94C6BD SWAP8 CALLDATACOPY 0x2B 0xDD SELFBALANCE CHAINID MOD BALANCE 0x26 DUP9 0xEE DIV 0xCA LOG1 SWAP6 CREATE SUB 0xE2 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"57:4059:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3027:67;57:4059;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3035:33;57:4059;;3027:67;:::i;:::-;57:4059;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3171:14;57:4059;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2417:33;57:4059;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2333:67;57:4059;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2417:33;57:4059;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;57:4059:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;932:28;57:4059;;;;1010:25;57:4059;;;;1082:24;57:4059;;1161:10;57:4059;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1153:38;57:4059;;;;;;;;;;;;:::i;:::-;;;;1270:173;;;;57:4059;1161:10;57:4059;1270:173;;57:4059;1391:15;57:4059;1270:173;;57:4059;1428:4;1270:173;;;57:4059;1161:10;57:4059;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1428:4;57:4059;;;;;;;;;;;;;;;1270:173;;57:4059;;;;;;;;;;1428:4;57:4059;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1467:71;57:4059;;;1270:173;57:4059;;;;;;;;;1428:4;57:4059;;;;;;;;;;;1428:4;57:4059;;;;;;;;;;;;;1270:173;;57:4059;;;;;;;;;;;;1270:173;;57:4059;;;;;;1270:173;;57:4059;;;;;;;;;;;;;;;;;;1270:173;57:4059;;1270:173;57:4059;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;1391:15;;57:4059;;;;1161:10;;1467:71;;;;57:4059;;;;;-1:-1:-1;57:4059:0;;;;;;;;;;;1428:4;57:4059;;;;;;;;;;;;;;;;;1428:4;57:4059;1467:71;57:4059;;;1270:173;57:4059;;;;;;;;;;;;;;;;;;1428:4;57:4059;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1428:4;57:4059;;;;;;;;;;;;;;;;1428:4;57:4059;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1428:4;57:4059;;;;-1:-1:-1;57:4059:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:4059:0;;;;;;;;;;;;;;;;;-1:-1:-1;;57:4059:0;;;;;;1428:4;57:4059;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1428:4;57:4059;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1428:4:0;57:4059;;;;-1:-1:-1;57:4059:0;;;;;;-1:-1:-1;;;57:4059:0;;;;;;;;;;;;-1:-1:-1;;;57:4059:0;;;;;;;;;;-1:-1:-1;;;57:4059:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;57:4059:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;57:4059:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1876:67;57:4059;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;57:4059:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;57:4059:0;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;57:4059:0;;;;;;;-1:-1:-1;;;;;57:4059:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;4074:7;57:4059;4074:7;57:4059;;;4074:7;57:4059;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4074:33;57:4059;;;;;;;;;;;;;;;;;;-1:-1:-1;;57:4059:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;57:4059:0;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;57:4059:0;;;;;;;;;;;;-1:-1:-1;;;57:4059:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:4059:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;57:4059:0;;;;;;;;-1:-1:-1;;57:4059:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:4059:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"createSurvey(string,string,string)":"afe2d16e","getSurvey(address,string)":"c7ee0cb3","getSurveyCid(address,string)":"4a8e7564","getSurveyDidNil(address,string)":"c307ccf0","isOwner(address,string)":"cd379964","surveyExists(address,string)":"0da6428c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"surveyName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"didNil\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SurveyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"didNil\",\"type\":\"string\"}],\"name\":\"createSurvey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"surveyName\",\"type\":\"string\"}],\"name\":\"getSurvey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"didNil\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"surveyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"surveyName\",\"type\":\"string\"}],\"name\":\"getSurveyCid\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"surveyName\",\"type\":\"string\"}],\"name\":\"getSurveyDidNil\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authSigAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"surveyName\",\"type\":\"string\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"surveyName\",\"type\":\"string\"}],\"name\":\"surveyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSurvey(string,string,string)\":{\"details\":\"Create a new survey\",\"params\":{\"didNil\":\"DID:NIL representing read access over the survey data\",\"ipfsCid\":\"IPFS CID containing the survey questions JSON\",\"surveyName\":\"Name of the survey\"}},\"getSurvey(address,string)\":{\"details\":\"Get complete survey data\",\"params\":{\"owner\":\"Address of the survey owner\",\"surveyName\":\"Name of the survey\"},\"returns\":{\"createdAt\":\"Creation timestamp\",\"didNil\":\"DID:NIL\",\"ipfsCid\":\"IPFS CID\",\"surveyOwner\":\"Owner address\"}},\"getSurveyCid(address,string)\":{\"details\":\"Get survey IPFS CID\",\"params\":{\"owner\":\"Address of the survey owner\",\"surveyName\":\"Name of the survey\"},\"returns\":{\"_0\":\"IPFS CID of the survey\"}},\"getSurveyDidNil(address,string)\":{\"details\":\"Get survey DID:NIL\",\"params\":{\"owner\":\"Address of the survey owner\",\"surveyName\":\"Name of the survey\"},\"returns\":{\"_0\":\"DID:NIL of the survey\"}},\"isOwner(address,string)\":{\"details\":\"Check if an address is the owner of a survey (for Lit Protocol)\",\"params\":{\"authSigAddress\":\"Address from the Lit Protocol auth signature\",\"surveyName\":\"Name of the survey to check\"},\"returns\":{\"_0\":\"bool True if the address owns the survey, false otherwise\"}},\"surveyExists(address,string)\":{\"details\":\"Check if a survey exists\",\"params\":{\"owner\":\"Address of the survey owner\",\"surveyName\":\"Name of the survey\"},\"returns\":{\"_0\":\"bool True if survey exists\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/survey-store.sol\":\"SurveyStore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/survey-store.sol\":{\"keccak256\":\"0xea813609d8bb7ed1d1ff52d47a5a0ba089ebb146dd087c4994a731d5e84f0514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c5264e3feb533c68825a003fa0b9d69d3fb5b3e93b6e34fa363dde36ad37b1\",\"dweb:/ipfs/QmSVCv38pRgURdH4PRYLZ3SxMKy7soXzqKpB19dQZmr5AR\"]}},\"version\":1}"}}}}}